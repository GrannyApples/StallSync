// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StallSync.Data;

#nullable disable

namespace StallSync.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StallSync.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("ResponsiblePerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Släpp ut hästarna i hagen",
                            EndDate = new DateTime(2024, 11, 21, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            ResponsiblePerson = "Amanda Olsson",
                            StartDate = new DateTime(2024, 11, 21, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Utsläpp"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ta in hästarna från hagen",
                            EndDate = new DateTime(2024, 11, 21, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = false,
                            ResponsiblePerson = "Sara Wigren",
                            StartDate = new DateTime(2024, 11, 21, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Intag"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fodra hästarna morgon och kväll",
                            EndDate = new DateTime(2024, 11, 21, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCompleted = true,
                            ResponsiblePerson = "Nils Oscar",
                            StartDate = new DateTime(2024, 11, 21, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fodring"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
